// ---Auto Generated by dsapr ---
package com.dsapr.vo;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.dsapr.mybatis.support.EntityOperations;
import com.dsapr.test.Student;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.Optional;

@Transactional
@Service
@Slf4j
@RequiredArgsConstructor
public class StudentServiceImpl extends ServiceImpl<StudentRepository, Student> implements IStudentService {
  private final StudentRepository studentRepository;

  /**
   * createImpl
   */
  @Override
  public Long createStudent(StudentCreator creator) {
    Optional<Student> student = EntityOperations.doCreate(studentRepository)
    .create(() -> StudentMapper.INSTANCE.dtoToEntity(creator))
    .update(e -> e.init())
    .execute();
    return student.isPresent() ? student.get().getId() : 0;
  }

  /**
   * update
   */
  @Override
  public void updateStudent(StudentUpdater updater) {
    EntityOperations.doUpdate(studentRepository)
    .loadById(updater.getId())
    .update(e -> updater.updateStudent(e))
    .execute();
  }

  /**
   * valid
   */
  @Override
  public void validStudent(Long id) {
    EntityOperations.doUpdate(studentRepository)
    .loadById(id)
    .update(e -> e.valid())
    .execute();
  }

  /**
   * invalid
   */
  @Override
  public void invalidStudent(Long id) {
    EntityOperations.doUpdate(studentRepository)
    .loadById(id)
    .update(e -> e.invalid())
    .execute();
  }
}
